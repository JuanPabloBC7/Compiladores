package Proyecto;

import java_cup.runtime.*;
import java_cup.runtime.Symbol;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import Proyecto.F3_MiniSQL_F;
import Proyecto.Token;


parser code {:
F3_MiniSQL_F analizadorFlex = null;

    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol) {    
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            m.append(" " + s.value.toString());
            if (s.left >= 0) {                
                m.append(" in line "+(s.right+1));
                if (s.right >= 0)
                    m.append(", column "+(s.left+1));
            }
        }
        m.append(" : "+message);
        System.err.println(m);
    }
   
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    public static void main(String[] args){
        try {
            //AnalizadorSintactico asin = new AnalizadorSintactico( ---------------------------------------------------------------------------------------------------------------------
            //        new AnalizadorLexico( new FileReader(args[0])));
            //Object result = asin.parse().value;
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
	
	int cont=0;
	int cont1=1;
	boolean Clasemas = false;
	boolean ManejarClase = false;
	boolean verInstancia=false;
	boolean ExisteInstancia=false;
	boolean VerAmbito=false;
	boolean Correcto=false;
:};

   
/* --------------------------------TERMINALES-------------------------------- */
terminal            SUMA, RESTA, MULTIPLICACION, DIVISION, PORCENTAJE, MENOR, MENOR_IGUAL, MAYOR, MAYOR_IGUAL, IGUAL, IGUAL_IGUAL, DIFERENCIA, DIFERENCIA2, YY, OO, ADMIRACION, 
                    CORCHETE_I, COMA, PUNTO, PUNTOYCOMA, CORCHETE_D, PARENTESIS_I, PARENTESIS_D, LLAVE_I, LLAVE_D, CORCHETES, PARENTESIS, LLAVES, ARROBA, NUMERAL, NUMERAL_DOBLE;
terminal            ABSOLUTE, ADA, ACTION, ADD, ALL, ALLOCATE, ALTER, AND, ANY, ARE, AS, ASC, ASSERTION, AT, AUTHORIZATION, AVG, BACKUP, BEGIN, BETWEEN, BIT, BIT_LENGTH, BOTH, BREAK, 
                    BROWSE, BULK, BY, CASCADE, CASCADED, CASE, CAST, CATALOG, CHAR, CHAR_LENGTH, CHARACTER, CHARACTER_LENGTH, CHECK, CHECKPOINT, CLOSE, CLUSTERED, COALESCE, COLLATE, 
                    COLLATION, COLUMN, COMMIT, COMPUTE, CONNECT, CONNECTION, CONSTRAINT, CONSTRAINTS, CONTAINS, CONTAINSTABLE, CONTINUE, CONVERT, CORRESPONDING, COUNT, CREATE, CROSS, 
                    CURRENT, CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, CURRENT_USER, CURSOR, DATABASE, DATE, DAY, DBCC, DEALLOCATE, DEC, DECIMAL, DECLARE, DEFAULT, DEFERRABLE, 
                    DEFERRED, DELAYED_DURABILITY, DELETE, DENY, DESC, DESCRIBE, DESCRIPTOR, DIAGNOSTICS, DISCONNECT, DISK, DISTINCT, DISTRIBUTED, DOMAIN, DOUBLE, DROP, DUMP, DYNAMIC, ELSE, END, END_EXEC, ENCRYPTION, ERRLVL, 
                    ESCAPE, EXCEPT, EXCEPTION, EXEC, EXECUTE, EXISTS, EXIT, EXTERNAL, EXTRACT, FALSE, FAST_FORWARD, FETCH, FILE, FILLFACTOR, FIRST, FLOAT, FOR, FOREIGN, FORTRAN, FOUND, FORWARD_ONLY, FREETEXT, 
                    FREETEXTTABLE, FROM, FULL, FUNCTION, GET, GLOBAL, GO, GOTO, GRANT, GROUP, HAVING, HOLDLOCK, HOUR, IDENTITY, IDENTITY_INSERT, IDENTITYCOL, IF, IMMEDIATE, IN, INCLUDE, 
                    INDEX, INDICATOR, INITIALLY, INNER, INPUT, INSENSITIVE, INSERT, INT, INTEGER, INTERSECT, INTERVAL, INTO, IS, ISOLATION, JOIN, KEY, KEYSET, KILL, LANGUAGE, LAST, LEADING, 
                    LEFT, LEVEL, LIKE, LINENO, LOAD, LOCAL, LOWER, MATCH, MAX, MERGE, MIN, MINUTE, MODULE, MONTH, NAMES, NATIONAL, NATURAL, NCHAR, NEXT, NO, NOCHECK, NONCLUSTERED, NOCLUSTERED, NONE, 
                    NOT, NULL, NULLIF, NUMERIC, OCTET_LENGTH, OF, OFF, OFFSETS, ON, ONLY, OPEN, OPENDATASOURCE, OPENQUERY, OPENROWSET, OPENXML, OPTION, OPTIMISTIC, OR, ORDER, OUT, OUTER, OUTPUT, OVER, 
                    OVERLAPS, PAD, PARTIAL, PASCAL, PERCENT, PIVOT, PLAN, POSITION, PRECISION, PREPARE, PRESERVE, PRIMARY, PRINT, PRIOR, PRIVILEGES, PROC, PROCEDURE, PUBLIC, RAISERROR, 
                    READ, READ_ONLY, READTEXT, REAL, RECOMPILE, RECONFIGURE, REFERENCES, RELATIVE, REPLICATION, RESTORE, RESTRICT, RETURN, RETURNS, REVERT, REVOKE, RIGHT, ROLLBACK, ROWCOUNT, ROWGUIDCOL, ROWS, RULE, 
                    SAVE, SCHEMA, SCROLL, SCROLL_LOCKS, SECOND, SECTION, SECURITYAUDIT, SELECT, SEMANTICKEYPHRASETABLE, SEMANTICSIMILARITYDETAIL, SEMANTICSIMILARITYDETAILSTABLE, SEMANTICSIMILARITYTABLE, SESSION, SESSION_USER, 
                    SET, SETUSER, SHUTDOWN, SIZE, SMALLINT, SOME, SPACE, SQL, SQLCA, SQLCODE, SQLERROR, SQLSTATE, SQLWARNING, STATISTICS, STATIC, SUBSTRING, SUM, SYSTEM_USER, TABLE, TABLESAMPLE, 
                    TEMPORARY, TEXTSIZE, THEN, TIME, TIMESTAMP, TIMEZONE_HOUR, TIMEZONE_MINUTE, TO, TOP, TRAILING, TRAN, TRANSACTION, TRANSLATE, TRANSLATION, TRIGGER, TRIM, TRUE, TRUNCATE, 
                    TRY_CONVERT, TSEQUAL, TYPE_WARNING, UNION, UNIQUE, UNKNOWN, UNPIVOT, UPDATE, UPDATETEXT, UPPER, USAGE, USE, USER, USING, VALUE, VALUES, VARCHAR, VARIYING, VARYING, VIEW, WAITFOR, WHEN, 
                    WHENEVER, WHERE, WHILE, WITH, WITHIN_GROUP, WORK, WRITE, WRITETEXT, YEAR, ZONE;               

terminal Integer    BOOLEANO, ENTERO, DECIMALES;
terminal            IDENTIFICADOR, CADENA, ERROR_COMENTARIO, ERROR;

/* ------------------------------NO TERMINALES------------------------------- */   
non terminal INICIALB, INICIAL, FIN_AN;
non terminal SELECT1, SELECT2, SELECT3, SELECT4, SELECT5, SELECT6, SELECT7, SELECT8, SELECT9, /*SELECT10,*/ SELECT11, SELECT12, SELECT13, SELECT14, SELECT15, /*SELECT16, SELECT17,*/ SELECT18, SELECT20;
non terminal INSERT0, INSERT1, INSERT2, INSERT3, INSERT4, INSERT5, INSERT6, INSERT7, INSERT8, INSERT9, INSERT10, INSERT11, INSERT12;
non terminal UPDATE0, UPDATE1, UPDATE2, UPDATE3, UPDATE4, UPDATE5, UPDATE6, UPDATE7, UPDATE8, UPDATE9, UPDATE10, UPDATE11, UPDATE12, UPDATE13, UPDATE14, UPDATE15, UPDATE16, UPDATE17;
non terminal DELETE1, DEL1, DEL2, DEL3, DEL4, DEL5, DEL6, DEL7, DEL8, DEL9, DEL10;

non terminal ALTER0, ALTER1, ALTER2, ALTER3, ALTER4, ALTER5, ALTER6, ALTER7, ALTER8, ALTER9, ALTER10, ALTER11, ALTER12, ALTER13, ALTER14, ALTER15, ALTER16, ALTER17, ALTER18, ALTER19, ALTER20, ALTER21, ALTER22, ALTER23, ALTER24;
non terminal CRT, CRT1, CRT2, CRT3, CREATE0, CREATE1, CREATE2, CREATE3, CREATE4, CREATE5, CREATE6, CREATE7, CREATE8, CREATE9, CREATE10, CREATE11, CREATE12, CREATE13, CREATE14, CREATE15, CREATE16, CREATE17, CREATE18, CREATE19, CREATE20;
non terminal TRUNCATE1, TRUNCATE2;
non terminal DROP0, DROP1, DROP2, DROP3, DROP4, DROP5, DROP6, DROP7, DROP8;

non terminal STP1, STP2, STP3, STP4, STP5, STP6, STP7, STP8, STP9;

non terminal DATABASE1, DATABASE2, DATABASE3, DATABASE4;
non terminal TABLE1, TABLE2, TABLE3, TABLE4, TABLE5;
non terminal SEXP, SEXP2, SEXP3, SEXP4, SEXP5;
non terminal OBJECT, OBJECT1, OBJECT2, OBJECT3;
non terminal SELIST, SELIST1, SELIST2, SELIST3, /*SELIST4,*/ SELIST5, SELIST6, SELIST7;
non terminal JOINTB, JOINTB1, JOINTB2, JOINTB3, JOINTB4;
non terminal SH_COND, SH_COND1, SH_COND2;
non terminal EXPRESSION, EXPRESSION1, EXPRESSION2, EXPRESSION3, EXPRESSION4;
non terminal ORDERB, ORDER1, ORDER2, ORDER3, ORDER4;
non terminal AGG_FN;
non terminal STR_FN, STR_FN1, STR_FN2;
non terminal DT_FN, DT_FN1, DT_FN2;
non terminal CONV, CONV1, CONV2, CONV3, CONV4, CONV5;
non terminal CASEW, CASEW1, CASEW2, CASEW3;
non terminal TB_SOURCE, TB_SOURCE1, TB_SOURCE2;
non terminal JOIN_TYPE, JOIN_TYPE1, JOIN_TYPE2, JOIN_TYPE3;
non terminal GSP, GSP1;
non terminal SH_CONDWM, SH_CONDWM1, SH_CONDWM2, SH_CONDWM3, SH_CONDWM4;
non terminal SUM_OPR, NOT_OPR, AR_OPR, COMPARE_OPR, LOGIC_OPR, BIN_OPR, ASIG_OPR, BIT_OPR;
non terminal SEL_AVG, SEL_AVG1, SEL_AVG2, SEL_AVG3;
non terminal SEL_COUNT, SEL_COUNT1, SEL_COUNT2, SEL_COUNT3;
non terminal SEL_AGR, SEL_AGR1, SEL_AGR2, SEL_AGR3;
non terminal DATATYPE, DATATYPE2, DATATYPE3, DATATYPE4, DATATYPE5;
non terminal ROWSET;
non terminal SAM_CL, SAM_CL1, SAM_CL2;
non terminal PREDICATE, PREDICATE1, PREDICATE2, PREDICATE3, PREDICATE4, PREDICATE5, PREDICATE6, PREDICATE7, PREDICATE8, PREDICATE9;
non terminal OTH_FN, OTH_FN1, OTH_FN2, OTH_FN3;
non terminal COMF, DEFV; 
non terminal FLSPC, FLSPC1;
non terminal VIEW1, VIEW2, VIEW3, VIEW4, VIEW5, VIEW6;
non terminal COMMITTRAN, COMMITTRAN1, COMMITTRAN2, COMMITTRAN3, COMMITTRAN4; 
non terminal ROLLBACKTRAN, ROLLBACKTRAN1, ROLLBACKTRAN2;
non terminal SAVETRAN, SAVETRAN1, SAVETRAN2;
non terminal BEGEND1, BEGEND2;
non terminal BEGINTRAN, BEGINTRAN1, BEGINTRAN2;
non terminal CURSOR1, CURSOR2, CURSOR3, CURSOR4, CURSOR5, CURSOR6, CURSOR7;
non terminal DECLARE1, DECLARE2, DECLARE3;
non terminal AS1;
non terminal RESERVADAS_CURSOR1, RESERVADAS_CURSOR2, RESERVADAS_CURSOR3, RESERVADAS_CURSOR4, RESERVADAS_CURSOR5;
non terminal WHILE1, WHILE2, WHILE3;
non terminal OPERADORES1;
non terminal FUNCTION1, FUNCTION2, FUNCTION3, FUNCTION4, FUNCTION5, FUNCTION6, FUNCTION7, FUNCTION8, FUNCTION9, FUNCTION10, FUNCTION11, FUNCTION12, FUNCTION13, FUNCTION14, FUNCTION15, FUNCTION16, FUNCTION17;
non terminal FUNC1, FUNC2, FUNC3, FUNC4, FUNC5, FUNC6, FUNC7, FUNC8, FUNC9, FUNC10, FUNC11, FUNC12, FUNC13, FUNC14, FUNC15, FUNC16, FUNC17;
non terminal PROCEDURE1, PROCEDURE2, PROCEDURE3, PROCEDURE4, PROCEDURE5, PROCEDURE6, PROCEDURE7, PROCEDURE8, PROCEDURE9, PROCEDURE10, PROCEDURE11, PROCEDURE12, PROCEDURE13, PROCEDURE14, PROCEDURE15, PROCEDURE16, PROCEDURE17;
non terminal SO0, SO1;
non terminal BEGIN1, BEGIN2, BEGIN3, BEGIN4;
non terminal DML, DML2, DML3, DML4;
non terminal COLNAME, COLNAME1;
non terminal OUTCL, OUTCL1, OUTCL2, OUTCL3;
non terminal COLST, COLST1, COLST2, EXPR_INSERT;
non terminal COL_CST, COL_CST1, COL_CST2, COL_CST3, COL_CST4, COL_CST5, COL_CST6, COL_CST7, COL_CST8, COL_CST9, COL_CST10, COL_CST11, COL_CST12, COL_CST13, COL_CST14, COL_CST15, COL_CST16, COL_CST17;
non terminal CONST_EXP;
non terminal TB_CST, TB_CST1, TB_CST2, TB_CST3, TB_CST4, TB_CST5, TB_CST6, TB_CST7, TB_CST8, TB_CST9, TB_CST10, TB_CST11, TB_CST12, TB_CST13, TB_CST14, TB_CST15, TB_CST16, TB_CST17, TB_CST18, TB_CST19, TB_CST20, TB_CST21, TB_CST22, TB_CST23;
non terminal COL_DEF, COL_DEF1, COL_DEF2, COL_DEF3, COL_DEF4, COL_DEF5, COL_DEF6, COL_DEF7, COL_DEF8, COL_DEF9, COL_DEF10;
non terminal TB_IX, TB_IX1, TB_IX2, TB_IX3, TB_IX4;





/* ------------------- Seccion de la gramatica ------------------------ */
start with INICIALB;

INICIALB ::= BEGIN INICIAL END FIN_AN INICIALB
        | INICIAL
        | error INICIALB
        | error
        | /* EPSILON */;

INICIAL ::= SELECT1 FIN_AN INICIAL
        | INSERT0 INICIAL
        | UPDATE0 INICIAL
        | DELETE1 INICIAL
        | ALTER0 INICIAL
        | CRT INICIAL
        | TRUNCATE1 INICIAL
        | DROP0 INICIAL
        | COMMITTRAN INICIAL
        | ROLLBACKTRAN INICIAL
        | SAVETRAN INICIAL
        | BEGINTRAN INICIAL
        | CURSOR1 INICIAL
        | FUNCTION1 INICIAL
        | TB_IX INICIAL
        | /* EPSILON */;






SELECT1 ::= SELECT SELECT2;
SELECT2 ::= SELECT3 SELECT4;
SELECT3 ::= ALL 
            | DISTINCT 
            | /* EPSILON */;
SELECT4 ::= TOP SELECT5 
            | SELECT7;
SELECT5 ::= PARENTESIS_I SEXP PARENTESIS_D SELECT6;
SELECT6 ::= PERCENT SELECT7 
            | SELECT7;
SELECT7 ::= SELIST SELECT20;
SELECT20 ::= COMA SELECT7
            | SELECT8;
SELECT8 ::= INTO SELECT9 
            | SELECT11;
SELECT9 ::= OBJECT SELECT11;
SELECT11 ::= FROM JOINTB SELECT12
            | SELECT12;
SELECT12 ::= WHERE SH_COND SELECT13
            | SELECT13;
SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
            | SELECT14;
SELECT14 ::= HAVING SH_COND SELECT15 
            | SELECT15; 
SELECT15 ::= ORDER BY ORDERB 
            | /* EPSILON */;
SELECT18 ::= COMA EXPRESSION SELECT18 
            | /* EPSILON */;


INSERT0 ::= INSERT INSERT1;
INSERT1 ::= TOP PARENTESIS_I SEXP PARENTESIS_D INSERT2
                | INSERT3;
INSERT2 ::= PERCENT INSERT3
                | INSERT3;
INSERT3 ::= INTO INSERT4
                | INSERT4;
INSERT4 ::= OBJECT INSERT5;
INSERT5 ::= COLST INSERT6
                | INSERT6;
INSERT6 ::= OUTCL INSERT7   
                | INSERT7;
INSERT7 ::= VALUES PARENTESIS_I INSERT8
                | SELECT1 INSERT9
                | DEFAULT VALUES INSERT9;
INSERT8 ::= INSERT10 INSERT11;
INSERT10 ::= DEFAULT
                | NULL
                | EXPR_INSERT;
INSERT11 ::= COMA INSERT8
                | PARENTESIS_D INSERT12;
INSERT12 ::= COMA PARENTESIS_I INSERT8
                | INSERT9;
INSERT9 ::= PUNTOYCOMA
                | GO;


UPDATE0 ::= UPDATE UPDATE1 UPDATE15;
UPDATE1 ::= TOP PARENTESIS_I SEXP PARENTESIS_D UPDATE2 UPDATE3
            | UPDATE3;
UPDATE2 ::= PERCENT
            | /* EPSILON */;
UPDATE3 ::= OBJECT UPDATE4
            | ARROBA IDENTIFICADOR UPDATE4;
UPDATE4 ::= SET UPDATE5;
UPDATE5 ::= UPDATE6 UPDATE11;
UPDATE6 ::= OBJECT UPDATE7
            | ARROBA IDENTIFICADOR IGUAL UPDATE10;
UPDATE7 ::= IGUAL UPDATE9;
UPDATE9 ::= EXPRESSION
            | SEXP
            | DEFAULT
            | NULL;
UPDATE10 ::= EXPRESSION;
UPDATE11 ::= COMA UPDATE5
            | UPDATE12;
UPDATE12 ::= OUTCL UPDATE16
            | UPDATE16;
UPDATE16 ::= FROM JOINTB UPDATE17
            | UPDATE17;
UPDATE17 ::= WHERE SH_COND
            | /* EPSILON */;
UPDATE15 ::= GO
            | PUNTOYCOMA;


DELETE1 ::= DELETE DEL2;
DEL2 ::= TOP PARENTESIS_I SEXP PARENTESIS_D DEL3
            | DEL4;
DEL3 ::= PERCENT DEL4
            | DEL4;
DEL4 ::= FROM DEL5
            | DEL5;
DEL5 ::= OBJECT DEL6
            | ARROBA IDENTIFICADOR DEL6;
DEL6 ::= OUTCL DEL7
            | DEL7;
DEL7 ::= FROM JOINTB DEL8
            | DEL9;
DEL8 ::= COMA JOINTB DEL8
            | DEL9;
DEL9 ::= WHERE SH_COND DEL10
            | DEL10;
DEL10 ::= PUNTOYCOMA
            | GO;


ALTER0 ::= ALTER ALTER1;
ALTER1 ::= TABLE ALTER2
        | DATABASE ALTER20 ALTER21
        | CRT2;
ALTER2 ::= OBJECT ALTER3;
ALTER3 ::= ALTER COLUMN IDENTIFICADOR 
        | ADD ALTER11
        | DROP ALTER12
        | WITH ALTER18 CONSTRAINT ALTER19
        | CHECK CONSTRAINT ALTER19
        | NOCHECK CONSTRAINT ALTER19;
ALTER4 ::= PARENTESIS_I ALTER5 PARENTESIS_D ALTER7
        | /* EPSILON */;
ALTER5 ::= ENTERO ALTER6 
        | MAX;
ALTER6 ::=  COMA ENTERO 
        | /* EPSILON */;
ALTER7 ::= COLLATE IDENTIFICADOR ALTER8
        | ALTER8;
ALTER8 ::= NULL
        | NOT NULL
        | /* EPSILON */;
ALTER9 ::= DATATYPE ALTER4
        | DROP ALTER10
        | ADD ALTER10;
ALTER10 ::= ROWGUIDCOL
        | NOT FOR REPLICATION;
ALTER11 ::= COL_DEF ALTER12
        | TB_CST ALTER12;
ALTER12 ::= COMA ALTER11
        | /* EPSILON */;
ALTER12 ::= CONSTRAINT ALTER13
        | ALTER13;
ALTER13 ::= IF EXISTS ALTER14
        | ALTER14;
ALTER14 ::= IDENTIFICADOR
        | COLUMN ALTER15 ALTER16;
ALTER15 ::= IF EXISTS
        | /* EPSILON */;
ALTER16 ::= IDENTIFICADOR ALTER17;
ALTER17 ::= COMA IDENTIFICADOR ALTER17
        | /* EPSILON */;
ALTER18 ::= CHECK
        | NOCHECK;
ALTER19 ::= ALL
        | IDENTIFICADOR;
ALTER20 ::= IDENTIFICADOR
        | CURRENT;
ALTER21 ::= COLLATE IDENTIFICADOR
        | ADD FILE FLSPC;


CRT ::= CREATE CRT1;
CRT1 ::= DATABASE IDENTIFICADOR DATABASE1 FIN_AN
        | OR ALTER CRT2
        | CRT2
        | USER IDENTIFICADOR FIN_AN
        | TABLE TABLE1
        | STP1;
CRT2 ::= PROC PROCEDURE1
        | PROCEDURE PROCEDURE1
        | VIEW VIEW1
        | FUNCTION FUNCTION1;


TRUNCATE1 ::= TRUNCATE TABLE OBJECT TRUNCATE2 TRUNCATE2 FIN_AN;
TRUNCATE2 ::= COMA OBJECT
            | /* EPSILON */;


DROP0 ::= DROP DROP1 FIN_AN;
DROP1 ::= TABLE DROP2 DROP5 
        | DATABASE DROP2 DROP7
        | USER DROP2 IDENTIFICADOR
        | VIEW DROP2 DROP3
        | PROC DROP2 DROP3
        | PROCEDURE DROP2 DROP3 
        | FUNCTION DROP2 DROP3;
DROP2 ::= IF EXISTS
        | /* EPSILON */;
DROP3 ::= IDENTIFICADOR DROP4;
DROP4 ::= PUNTO IDENTIFICADOR
        | /* EPSILON */;
DROP5 ::= OBJECT DROP6;
DROP6 ::= COMA DROP5
        | /* EPSILON */;
DROP7 ::= IDENTIFICADOR DROP8;
DROP8 ::= COMA DROP7
        | /* EPSILON */;










COMMITTRAN ::= COMMIT COMMITTRAN1 COMMITTRAN2 FIN_AN;
COMMITTRAN1 ::= BEGINTRAN1
        | /* EPSILON */;
COMMITTRAN2 ::= IDENTIFICADOR
        | ARROBA IDENTIFICADOR
        | /* EPSILON */;


ROLLBACKTRAN ::= ROLLBACK BEGINTRAN1 BEGINTRAN2 FIN_AN;


SAVETRAN ::= SAVE BEGINTRAN1 SAVETRAN1 FIN_AN;
SAVETRAN1 ::= IDENTIFICADOR
        | ARROBA IDENTIFICADOR;


BEGINTRAN ::= BEGIN BEGINTRAN1 BEGINTRAN2 FIN_AN;
BEGINTRAN1 ::= TRAN
        | TRANSACTION;
BEGINTRAN2 ::= IDENTIFICADOR
        | ARROBA IDENTIFICADOR 
        | /* EPSILON */;










CURSOR1 ::= DECLARE IDENTIFICADOR CURSOR RESERVADAS_CURSOR1 CURSOR2;
CURSOR2 ::= FOR SELECT1 CURSOR3;
CURSOR3 ::= OPEN IDENTIFICADOR CURSOR4;
CURSOR4 ::= FETCH NEXT FROM IDENTIFICADOR INTO DECLARE2;
CURSOR5 ::= WHILE1 CURSOR6;
CURSOR6 ::= CLOSE IDENTIFICADOR CURSOR7;
CURSOR7 ::= DEALLOCATE IDENTIFICADOR COMF;


DECLARE1 ::= DECLARE  DECLARE2;
DECLARE2 ::= ARROBA IDENTIFICADOR AS1 DATATYPE3 DECLARE2;
DECLARE3 ::= COMA ARROBA IDENTIFICADOR AS1 DATATYPE3 DECLARE2
        | COMA ARROBA IDENTIFICADOR AS1 DATATYPE3 PUNTOYCOMA
        | PUNTOYCOMA;


AS1 ::= AS
    | /* EPSILON */;


RESERVADAS_CURSOR1 ::= LOCAL RESERVADAS_CURSOR2
        | GLOBAL RESERVADAS_CURSOR2
        | RESERVADAS_CURSOR2
        | /* EPSILON */;
RESERVADAS_CURSOR2 ::=  SCROLL RESERVADAS_CURSOR3
        | FORWARD_ONLY  RESERVADAS_CURSOR3
        | RESERVADAS_CURSOR3
        | /* EPSILON */;
RESERVADAS_CURSOR3 ::=   STATIC  RESERVADAS_CURSOR4
        | KEYSET  RESERVADAS_CURSOR4
        | DYNAMIC  RESERVADAS_CURSOR4
        | FAST_FORWARD  RESERVADAS_CURSOR4
        | RESERVADAS_CURSOR4
        | /* EPSILON */;
RESERVADAS_CURSOR4 ::=   READ_ONLY  RESERVADAS_CURSOR5
        | SCROLL_LOCKS  RESERVADAS_CURSOR5
        | OPTIMISTIC  RESERVADAS_CURSOR5
        | RESERVADAS_CURSOR5
        | /* EPSILON */;
RESERVADAS_CURSOR5 ::=   TYPE_WARNING
        | /* EPSILON */;


WHILE1 ::= WHILE PARENTESIS_I WHILE3 PARENTESIS_D LLAVE_I WHILE2;
WHILE2 ::= SELECT1 WHILE2
        | INSERT1 WHILE2
        | UPDATE0 WHILE2
        | DELETE1 WHILE2
        | ALTER0 WHILE2
        | CRT WHILE2
        | TRUNCATE1 WHILE2
        | DROP0 WHILE2
        | FETCH NEXT FROM IDENTIFICADOR INTO DECLARE2 WHILE2
        | LLAVE_D;
WHILE3  ::=  ARROBA ARROBA IDENTIFICADOR IGUAL ENTERO
        | IDENTIFICADOR OPERADORES1 CONST_EXP;


OPERADORES1 ::= SUMA
        | RESTA
        | MULTIPLICACION
        | DIVISION
        | PORCENTAJE
        | MENOR
        | MENOR_IGUAL
        | MAYOR
        | MAYOR_IGUAL
        | IGUAL
        | IGUAL_IGUAL
        | DIFERENCIA
        | DIFERENCIA2;


FUNC1 ::= CREATE FUNC2 FUNCTION  FUNC3;
FUNC2 ::= OR ALTER
        | /* EPSILON */;
FUNC3 ::= IDENTIFICADOR FUNC3
        | FUNC4;	
FUNC4 ::= PUNTO IDENTIFICADOR  FUNC5;
FUNC5 ::=  PARENTESIS_I FUNC6 PARENTESIS_D FUNC9;
FUNC6 ::= ARROBA IDENTIFICADOR FUNC7 DATATYPE3 FUNC8;
FUNC7 ::= AS 
        | /* EPSILON */;
FUNC8 ::= COMA FUNC6
        | /* EPSILON */;
FUNC9 ::= RETURNS FUNC10;
FUNC10 ::=  DATATYPE FUNC11
        | TABLE FUNC14;
FUNC11 ::= AS FUNC12
        | FUNC12;
FUNC12 ::=  BEGIN FUNC17 FUNC13 END COMF;
FUNC13 ::= RETURN SEXP;
FUNC14 ::=  AS FUNC15
        | FUNC15;
FUNC15 ::= PARENTESIS_I FUNC16 PARENTESIS_D
        | FUNC16;
FUNC16 ::= SELECT1;
FUNC17 ::= SELECT1 FUNC17 
        | INSERT1 FUNC17
        | UPDATE0 FUNC17
        | DELETE1 FUNC17
        | TRUNCATE1 FUNC17
        | DROP0 FUNC17
        | /* EPSILON */;


STP1 ::= PROCEDURE OBJECT STP2 STP4;
STP2 ::= ARROBA IDENTIFICADOR DATATYPE3 STP3 STP6 AS BEGIN1;
STP3 ::=  VARIYING STP4
    | VARYING STP4
    | STP4;
STP4 ::= IGUAL DEFAULT STP5
    | STP5;
STP5 ::= OUT
    | OUTPUT
    | /* EPSILON */;
STP6 ::= WITH SO0
    | STP7;
STP7 ::= FOR REPLICATION STP9
    | /* EPSILON */;
STP8 ::= EXEC OBJECT STP9;
STP9 ::= PUNTOYCOMA
	| GO
        | /* EPSILON */;

SO0 ::= ENCRYPTION SO1
        | SO1;
SO1 ::= RECOMPILE
        | /* EPSILON */;



BEGIN1 ::= BEGIN BEGIN2 END;
BEGIN2 ::= SELECT1 BEGIN3
        | INSERT1 BEGIN3
        | UPDATE0 BEGIN3
        | DELETE1  BEGIN3;
BEGIN3 ::= SELECT1 BEGIN4
        | INSERT1 BEGIN4
        | UPDATE0 BEGIN4
        | DELETE1 BEGIN4
        | /* EPSILON */;
BEGIN4 ::= SELECT1
        | INSERT1
        | UPDATE0
        | DELETE1
        | /* EPSILON */;




























SEXP ::= SEXP3 SEXP2;
SEXP2 ::= SUMA SEXP3 SEXP2
            | RESTA SEXP3 SEXP2
            | /* EPSILON */;
SEXP3 ::= SEXP5 SEXP4;
SEXP4 ::= MULTIPLICACION SEXP5 SEXP4
            | DIVISION SEXP5 SEXP4
            | /* EPSILON */;
SEXP5 ::= PARENTESIS_I SEXP PARENTESIS_D
            | ENTERO
            | DECIMALES
            | ARROBA IDENTIFICADOR
            | AGG_FN 
            | OBJECT;


FIN_AN ::= PUNTOYCOMA
        | GO;


OBJECT ::= IDENTIFICADOR OBJECT1;

OBJECT1 ::= PUNTO IDENTIFICADOR OBJECT2
        | /* EPSILON */; 

OBJECT2 ::= PUNTO IDENTIFICADOR OBJECT3
        | /* EPSILON */; 

OBJECT3 ::= PUNTO IDENTIFICADOR
        | /* EPSILON */; 


SH_COND ::= SH_COND1 SH_COND2;
SH_COND1 ::= MATCH PARENTESIS_I GSP PARENTESIS_D 
            | SH_CONDWM;
SH_COND2 ::= AND SH_COND 
            | /* EPSILON */;


PREDICATE ::= PREDICATE1 PREDICATE2 
            | CONTAINS PARENTESIS_I PREDICATE7 COMA PREDICATE8 PARENTESIS_D
            | FREETEXT PARENTESIS_I PREDICATE7 COMA PREDICATE9 PARENTESIS_D;
PREDICATE1 ::= OBJECT 
            | CADENA
            | SEXP 
            | CASEW 
            | AGG_FN 
            | STR_FN 
            | DT_FN 
            | CONV 
            | OTH_FN;
PREDICATE2 ::= COMPARE_OPR PREDICATE1 
            | NOT PREDICATE3 
            | LIKE PREDICATE1 PREDICATE6 
            | BETWEEN PREDICATE1 AND PREDICATE1 
            | IS PREDICATE4 NULL 
            | IN PREDICATE1 PREDICATE5;
PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
            | BETWEEN PREDICATE1 AND PREDICATE1 
            | IN PREDICATE1 PREDICATE5;
PREDICATE4 ::= NOT 
            |;
PREDICATE5 ::= COMA PREDICATE1 PREDICATE5 
            |;
PREDICATE6 ::= ESCAPE CADENA 
            |; 
PREDICATE7 ::= MULTIPLICACION 
            | OBJECT;
PREDICATE8 ::= SH_COND;
PREDICATE9 ::= CADENA 
            | ARROBA IDENTIFICADOR;


SH_CONDWM ::= SH_CONDWM4 PREDICATE SH_CONDWM1 
            | PARENTESIS_I SH_CONDWM PARENTESIS_D SH_CONDWM1;
SH_CONDWM1 ::= OR SH_CONDWM2 
            |; 
SH_CONDWM2 ::= NOT SH_CONDWM3 
            | SH_CONDWM3;
SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
            | PARENTESIS_I SH_CONDWM PARENTESIS_D SH_CONDWM1;
SH_CONDWM4 ::= NOT
            |;


GSP ::= IDENTIFICADOR GSP1 IDENTIFICADOR;
GSP1 ::= MENOR RESTA PARENTESIS_I IDENTIFICADOR PARENTESIS_D RESTA 
        | RESTA PARENTESIS_I IDENTIFICADOR PARENTESIS_D RESTA MAYOR;


EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
        | EXPRESSION2 SUM_OPR EXPRESSION2 
        | NOT_OPR EXPRESSION EXPRESSION4 
        | EXPRESSION3;
EXPRESSION1 ::= AR_OPR 
        | COMPARE_OPR 
        | SUM_OPR;
EXPRESSION2 ::= CADENA 
        | IDENTIFICADOR;
EXPRESSION3 ::= SEXP 
        | IDENTIFICADOR 
        | CADENA;
EXPRESSION4 ::= COMPARE_OPR 
        | LOGIC_OPR;


DML ::= DML2 DML3;
DML2 ::= COLNAME
            | SEXP;
DML3 ::= AS IDENTIFICADOR DML4
            | /* EPSILON */;
DML4 ::= COMA DML
            | /* EPSILON */;


COLNAME ::= IDENTIFICADOR PUNTO COLNAME1;
COLNAME1 ::= MULTIPLICACION
                | IDENTIFICADOR;


OUTCL ::= OUTPUT DML OUTCL1
            | /* EPSILON */;
OUTCL1 ::= INTO OUTCL2
            | /* EPSILON */;
OUTCL2 ::= ARROBA IDENTIFICADOR OUTCL3
            | IDENTIFICADOR OUTCL3;
OUTCL3 ::= COLST
            | /* EPSILON */;


COLST ::= PARENTESIS_I COLST1;
COLST1 ::= IDENTIFICADOR COLST2;
COLST2 ::= COMA COLST1
            | PARENTESIS_D;
            

EXPR_INSERT ::= SEXP
                | CADENA
                | BOOLEANO;


SELIST ::= SELIST1 SELIST5
            | MULTIPLICACION
            | ARROBA IDENTIFICADOR IGUAL SELIST1;
SELIST1 ::= IDENTIFICADOR SELIST2
            | EXPRESSION
            | AGG_FN
            | STR_FN
            | DT_FN
            | CONV
            | CASEW;
SELIST2 ::= PUNTO SELIST3
            | IGUAL SELIST6
            | /* EPSILON */;
SELIST3 ::= MULTIPLICACION
            | IDENTIFICADOR SELIST7;
SELIST5 ::= AS IDENTIFICADOR
            | IDENTIFICADOR 
            | /* EPSILON */;
SELIST6 ::= EXPRESSION;
SELIST7 ::= PUNTO IDENTIFICADOR SELIST5
            | SELIST5;


CONV ::= CAST PARENTESIS_I CONV1 
            | CONVERT PARENTESIS_I CONV2;
CONV1 ::= EXPRESSION AS DATATYPE CONV3 PARENTESIS_D;
CONV2 ::= DATATYPE CONV3 CONV4;
CONV3 ::= PARENTESIS_I ENTERO PARENTESIS_D
            | /* EPSILON */;
CONV4 ::= EXPRESSION CONV5;
CONV5 ::= COMA SEXP
            | PARENTESIS_D;


DT_FN ::= CURRENT_TIMESTAMP
            | DAY PARENTESIS_I DT_FN1 PARENTESIS_D
            | MONTH PARENTESIS_I DT_FN1 PARENTESIS_D
            | YEAR PARENTESIS_I DT_FN1 PARENTESIS_D
            | SET LANGUAGE DT_FN2;
DT_FN1 ::= CADENA
            | ARROBA IDENTIFICADOR;
DT_FN2 ::= ARROBA IDENTIFICADOR
            | IDENTIFICADOR;


STR_FN ::= LOWER PARENTESIS_I STR_FN1 PARENTESIS_D
            | TRANSLATE PARENTESIS_I STR_FN1 COMA STR_FN1 COMA STR_FN1 PARENTESIS_D
            | UPPER PARENTESIS_I STR_FN1 PARENTESIS_D
            | CHAR PARENTESIS_I SEXP PARENTESIS_D
            | LEFT PARENTESIS_I STR_FN1 COMA SEXP PARENTESIS_D
            | TRIM PARENTESIS_I STR_FN1 STR_FN2 PARENTESIS_D
            | NCHAR PARENTESIS_I SEXP PARENTESIS_D
            | RIGHT PARENTESIS_I STR_FN1 COMA SEXP PARENTESIS_D
            | SPACE PARENTESIS_I SEXP PARENTESIS_D 
            | SUBSTRING PARENTESIS_I STR_FN1 COMA SEXP COMA SEXP PARENTESIS_D;
STR_FN1 ::= ARROBA IDENTIFICADOR
            | CADENA
            | IDENTIFICADOR;
STR_FN2 ::= FROM STR_FN1
            | /* EPSILON */;


OTH_FN ::= NEXT VALUE FOR IDENTIFICADOR OTH_FN1
            | SYSTEM_USER
            | SESSION_USER
            | NULLIF PARENTESIS_I EXPRESSION COMA EXPRESSION PARENTESIS_D;
OTH_FN1 ::=  PUNTO IDENTIFICADOR OTH_FN2
            | OTH_FN2;
OTH_FN2 ::= PUNTO IDENTIFICADOR OTH_FN3
            | OTH_FN3;
OTH_FN3 ::= OVER ORDER BY ORDERB;


AGG_FN ::= AVG PARENTESIS_I SEL_AVG PARENTESIS_D 
        | COUNT PARENTESIS_I SEL_COUNT PARENTESIS_D 
        | MAX PARENTESIS_I SEL_AGR PARENTESIS_D 
        | MIN PARENTESIS_I SEL_AGR PARENTESIS_D 
        | SUM PARENTESIS_I SEL_AGR PARENTESIS_D;
SEL_AVG ::= SEL_AVG1 SEL_AVG2;
SEL_AVG1 ::= ALL 
        | DISTINCT 
        | /* EPSILON */; 
SEL_AVG2 ::= SEXP 
        | IDENTIFICADOR SEL_AVG3;
SEL_AVG3 ::= PUNTO IDENTIFICADOR 
        | /* EPSILON */; 
SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2;
SEL_COUNT1 ::= ALL 
        | DISTINCT 
        | /* EPSILON */; 
SEL_COUNT2 ::= MULTIPLICACION 
        | IDENTIFICADOR SEL_COUNT3 
        | SEXP;
SEL_COUNT3 ::= PUNTO IDENTIFICADOR 
        | /* EPSILON */; 
SEL_AGR ::= SEL_AGR1 SEL_AGR2;
SEL_AGR1 ::= ALL 
        | DISTINCT 
        | /* EPSILON */;
SEL_AGR2 ::= IDENTIFICADOR SEL_AGR3 
        | SEXP; 
SEL_AGR3 ::= PUNTO IDENTIFICADOR 
        | /* EPSILON */; 


EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
        | EXPRESSION2 SUM_OPR EXPRESSION2 
        | NOT_OPR EXPRESSION EXPRESSION4 
        | EXPRESSION3
        | PARENTESIS_I EXPRESSION PARENTESIS_D;
EXPRESSION1 ::= AR_OPR 
        | COMPARE_OPR 
        | SUM_OPR;
EXPRESSION2 ::= CADENA 
        | IDENTIFICADOR;
EXPRESSION3 ::= SEXP 
        | IDENTIFICADOR 
        | CADENA;
EXPRESSION4 ::= COMPARE_OPR 
        | LOGIC_OPR;


BIN_OPR ::= AR_OPR
            | ASIG_OPR
            | BIT_OPR
            | COMPARE_OPR
            | LOGIC_OPR;
AR_OPR ::= RESTA
            | MULTIPLICACION
            | DIVISION
            | PORCENTAJE;
SUM_OPR ::= SUMA;
ASIG_OPR ::= IGUAL;
BIT_OPR ::= AND
            | OR;
NOT_OPR ::= NOT;
COMPARE_OPR ::= MAYOR
            | MENOR
            | MAYOR_IGUAL
            | MENOR_IGUAL
            | DIFERENCIA 
            | DIFERENCIA2
            | IGUAL;
LOGIC_OPR ::= BETWEEN
            | IN
            | LIKE;


CASEW ::= CASE CASEW1;
CASEW1 ::= EXPRESSION CASEW2    
            | CASEW2;
CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3;
CASEW3 ::= ELSE EXPRESSION END 
            | CASEW2 
            | END;


ROWSET ::= OPENDATASOURCE PARENTESIS_I CADENA COMA CADENA PARENTESIS_D
            | OPENQUERY PARENTESIS_I IDENTIFICADOR COMA CADENA PARENTESIS_D;


SAM_CL ::= TABLESAMPLE PARENTESIS_I SAM_CL1 PARENTESIS_D;
SAM_CL1 ::= SEXP SAM_CL2;
SAM_CL2 ::= PERCENT
            | ROWS
            | /* EPSILON */;


JOIN_TYPE ::= JOIN_TYPE1 JOIN;
JOIN_TYPE1 ::= INNER
            |JOIN_TYPE2 
            | /* EPSILON */;
JOIN_TYPE2 ::= LEFT JOIN_TYPE3
            | RIGHT JOIN_TYPE3
            | FULL JOIN_TYPE3
            | /* EPSILON */;
JOIN_TYPE3 ::= OUTER
            | /* EPSILON */;


JOINTB ::= TB_SOURCE JOINTB1 
            | PARENTESIS_I JOIN PARENTESIS_D;
JOINTB1 ::= JOIN_TYPE JOINTB3
            | CROSS COMA JOIN JOINTB4
            | /* EPSILON */;
JOINTB2 ::= JOIN_TYPE JOINTB3
            | CROSS COMA JOIN JOINTB4;
JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4;
JOINTB4 ::= JOINTB2
            | /* EPSILON */;


TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
            | ROWSET TB_SOURCE1
            | ARROBA IDENTIFICADOR TB_SOURCE1;
TB_SOURCE1 ::= AS IDENTIFICADOR 
            | IDENTIFICADOR
            | /* EPSILON */;
TB_SOURCE2 ::= SAM_CL
            | /* EPSILON */;


ORDERB ::= SELIST ORDER1;
ORDER1 ::= ORDER2
            | COMA ORDERB;
ORDER2 ::= COLLATE ORDER3
            | ORDER4;
ORDER3 ::= IDENTIFICADOR ORDER4;
ORDER4 ::= ASC
            | DESC 
            | /* EPSILON */;


DATATYPE ::= IDENTIFICADOR DATATYPE2 
            |DATATYPE3;
DATATYPE2 ::= PUNTO IDENTIFICADOR;
DATATYPE3 ::= BIT DATATYPE4 
            |INT DATATYPE4 
            |INTEGER DATATYPE4 
            |FLOAT DATATYPE4 
            |VARCHAR DATATYPE4 
            |DATE DATATYPE4 
            |REAL DATATYPE4 
            |DECIMAL DATATYPE4 
            |NUMERIC DATATYPE4 
            |SMALLINT DATATYPE4 
            |TIME DATATYPE4 
            |CHAR DATATYPE4 
            |NCHAR DATATYPE4;
DATATYPE4 ::= PARENTESIS_I ENTERO DATATYPE5 
            | ;
DATATYPE5 ::= COMA ENTERO PARENTESIS_D 
            | PARENTESIS_D;


DEFV ::= CADENA 
        | DECIMALES
        | ENTERO
        | BOOLEANO
        | NULL;


DATABASE1 ::= ON DATABASE2 DATABASE3
        | /* EPSILON */;
DATABASE2 ::= PRIMARY FLSPC DATABASE4;
DATABASE3 ::= COLLATE IDENTIFICADOR 
        | /* EPSILON */;
DATABASE4 ::= COMA FLSPC DATABASE4
        | /* EPSILON */;


FLSPC ::= PARENTESIS_I NAMES IGUAL CADENA COMA FILE IGUAL CADENA FLSPC1 PARENTESIS_D;
FLSPC1 ::= COMA SIZE IGUAL ENTERO 
        | /* EPSILON */;


PROCEDURE1 ::= IDENTIFICADOR PROCEDURE2;
PROCEDURE2 ::= PUNTO IDENTIFICADOR PROCEDURE3
        | PROCEDURE3;
PROCEDURE3 ::= PUNTOYCOMA ENTERO PROCEDURE4
        | PROCEDURE4;
PROCEDURE4 ::= ARROBA IDENTIFICADOR PROCEDURE5 DATATYPE PROCEDURE6;
PROCEDURE5 ::= AS
        | /* EPSILON */;
PROCEDURE6 ::= VARYING PROCEDURE7
        | PROCEDURE7;
PROCEDURE7 ::= IGUAL DEFV PROCEDURE8
        | PROCEDURE8;
PROCEDURE8 ::= OUTPUT PROCEDURE9
        | PROCEDURE9;
PROCEDURE9 ::= COMA PROCEDURE4
        | PROCEDURE10;
PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13
        | PROCEDURE13;
PROCEDURE11 ::= EXECUTE
        | EXEC;
PROCEDURE12 ::= CADENA;
PROCEDURE13 ::= FOR REPLICATION PROCEDURE14
        | PROCEDURE14;
PROCEDURE14 ::= AS PROCEDURE15 PROCEDURE16 PROCEDURE17 FIN_AN;
PROCEDURE15 ::= BEGIN
        | /* EPSILON */;
PROCEDURE16 ::= SELECT1 FIN_AN
        | INSERT0
        | DELETE1
        | UPDATE0;
PROCEDURE17 ::= PROCEDURE16 PROCEDURE17
        | END
        | /* EPSILON */;


VIEW1 ::= IDENTIFICADOR VIEW2 VIEW3;
VIEW2 ::= PUNTO IDENTIFICADOR
        | /* EPSILON */;
VIEW3 ::= PARENTESIS_I VIEW4 PARENTESIS_D AS SELECT1 VIEW6 
        | AS SELECT1 VIEW6;
VIEW4 ::= IDENTIFICADOR VIEW5
        | /* EPSILON */; 
VIEW5 ::= COMA IDENTIFICADOR VIEW5
        | /* EPSILON */;
VIEW6 ::= WITH CHECK OPTION FIN_AN
        | FIN_AN;


COL_CST ::= COL_CST1 COL_CST2 COL_CST3; 
COL_CST1 ::= CONSTRAINT IDENTIFICADOR
            | /* EPSILON */;
COL_CST2 ::= NULL
            | NOT NULL 
            | /* EPSILON */;
COL_CST3 ::= PRIMARY KEY COL_CST4
            | UNIQUE COL_CST4 
            | COL_CST8
            | DEFAULT COL_CST17                         /*{: System.out.println("termino DEFAULT"); :}
            | CHECK COL_CST16 PARENTESIS_I SH_COND PARENTESIS_D;
COL_CST4 ::= CLUSTERED COL_CST5
            | COL_CST5;
COL_CST5 ::= WITH COL_CST6 COL_CST7
            | COL_CST7;
COL_CST6 ::= FILLFACTOR IGUAL ENTERO
            | PARENTESIS_I FILLFACTOR IGUAL ENTERO PARENTESIS_D;
COL_CST7 ::= ON IDENTIFICADOR PARENTESIS_I IDENTIFICADOR PARENTESIS_D
            | /* EPSILON */;
COL_CST8 ::= COL_CST9 REFERENCES IDENTIFICADOR COL_CST10 COL_CST11;
COL_CST9 ::= FOREIGN KEY
            | /* EPSILON */; 
COL_CST10 ::= PUNTO IDENTIFICADOR
            | /* EPSILON */;
COL_CST11 ::= PARENTESIS_I IDENTIFICADOR PARENTESIS_D COL_CST12
            | COL_CST12;
COL_CST12 ::= ON COL_CST13 COL_CST14
            | /* EPSILON */;
COL_CST13 ::= DELETE
            | UPDATE;
COL_CST14 ::= NO ACTION
            | CASCADE
            | SET COL_CST15;
COL_CST15 ::= NULL
            | DEFAULT;
COL_CST16 ::= NOT FOR REPLICATION
            | /* EPSILON */;
COL_CST17 ::= CONST_EXP 
            | /* EPSILON */;


CONST_EXP ::= ARROBA IDENTIFICADOR
            | IDENTIFICADOR
            | CADENA
            | ENTERO
            | DECIMALES;


TB_CST ::= TB_CST1 TB_CST2;
TB_CST1 ::= CONSTRAINT IDENTIFICADOR 
            | /* EPSILON */;
TB_CST2 ::= PRIMARY KEY TB_CST4 TB_CST3
            | UNIQUE TB_CST4 TB_CST3
            | FOREIGN KEY TB_CST9
            | CONNECTION TB_CST16
            | DEFAULT TB_CST22
            | CHECK TB_CST20;
TB_CST3 ::= PARENTESIS_I IDENTIFICADOR TB_CST5 TB_CST6 PARENTESIS_D TB_CST7;
TB_CST4 ::= CLUSTERED
            | /* EPSILON */;
TB_CST5 ::= ASC
            | DESC 
            | /* EPSILON */;
TB_CST6 ::= COMA IDENTIFICADOR TB_CST6
            | /* EPSILON */;
TB_CST7 ::= WITH FILLFACTOR IGUAL ENTERO TB_CST8
            | TB_CST8 
            | /* EPSILON */;
TB_CST8 ::= ON IDENTIFICADOR PARENTESIS_I IDENTIFICADOR PARENTESIS_D
            | IDENTIFICADOR;
TB_CST9 ::= PARENTESIS_I IDENTIFICADOR TB_CST6 PARENTESIS_D REFERENCES IDENTIFICADOR TB_CST10;
TB_CST10 ::= PARENTESIS_I IDENTIFICADOR TB_CST6 PARENTESIS_D TB_CST11
            | TB_CST11;
TB_CST11 ::= ON TB_CST12 TB_CST13 TB_CST15;
TB_CST12 ::= DELETE
            | UPDATE;
TB_CST13 ::= NO ACTION
            | CASCADE
            | SET TB_CST14;
TB_CST14 ::= NULL
            | DEFAULT;
TB_CST15 ::= NOT FOR REPLICATION
            | /* EPSILON */;
TB_CST16 ::= PARENTESIS_I IDENTIFICADOR TO IDENTIFICADOR TB_CST17 PARENTESIS_D TB_CST18;
TB_CST17 ::= COMA IDENTIFICADOR TO IDENTIFICADOR TB_CST17
            | /* EPSILON*/;
TB_CST18 ::= ON DELETE TB_CST19;
TB_CST19 ::= NO ACTION
            | CASCADE;
TB_CST20 ::= NOT FOR REPLICATION PARENTESIS_I SH_COND PARENTESIS_D
            | PARENTESIS_I SH_COND PARENTESIS_D;
TB_CST21 ::= WITH VALUES
            | /* VALUES */;
TB_CST22 ::= CONST_EXP TB_CST23;
TB_CST23 ::= FOR IDENTIFICADOR TB_CST21
            | /* EPSILON */;


COL_DEF ::= IDENTIFICADOR DATATYPE COL_DEF1     /*{: System.out.println("termino coldef"); :}*/;
COL_DEF1 ::= COLLATE IDENTIFICADOR COL_DEF2
            | COL_DEF2;
COL_DEF2 ::= NULL COL_DEF3
            | NOT NULL COL_DEF3
            | COL_DEF3;
COL_DEF3 ::= COL_DEF5
            | IDENTITY COL_DEF6
            | /* EPSILON */;
COL_DEF5 ::= WITH VALUES COL_DEF8
            | COL_DEF8;
COL_DEF6 ::= PARENTESIS_I SEXP COMA SEXP PARENTESIS_D COL_DEF7
            | COL_DEF7;
COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8
            | COL_DEF8;
COL_DEF8 ::= ROWGUIDCOL COL_DEF10
            | COL_DEF10;
COL_DEF10 ::= COL_CST
            | /* EPSILON */;


TB_IX ::= INDEX IDENTIFICADOR PARENTESIS_I TB_IX1 PARENTESIS_D TB_IX4;
TB_IX1 ::=  IDENTIFICADOR TB_IX2 TB_IX3;
TB_IX2 ::= ASC
        | DEC
        | /* EPSILON */; 
TB_IX3 ::= COMA TB_IX2
        | /* EPSILON */;
TB_IX4 ::= WITH FILLFACTOR IGUAL ENTERO 
        | /* EPSILON */;


TABLE1 ::= OBJECT PARENTESIS_I TABLE2 TABLE3 PARENTESIS_D TABLE4 FIN_AN;
TABLE2 ::= COL_DEF
        | TB_CST;
TABLE3 ::= COMA TABLE2 TABLE3
        | /* EPSILON */;
TABLE4 ::= ON TABLE5
        | /* EPSILON */;
TABLE5 ::= IDENTIFICADOR PARENTESIS_I IDENTIFICADOR PARENTESIS_D
        | PRIMARY;


FUNCTION1 ::= IDENTIFICADOR FUNCTION2 PARENTESIS_I FUNCTION3 PARENTESIS_D RETURNS DATATYPE FUNCTION6;
FUNCTION2 ::= PUNTO IDENTIFICADOR
        | /* EPSILON */;
FUNCTION3 ::= ARROBA IDENTIFICADOR FUNCTION4 DATATYPE FUNCTION5 FUNCTION3
        | /* EPSILON */;
FUNCTION4 ::= AS
        | /* EPSILON */;
FUNCTION5 ::= IGUAL DEFV
        | /* EPSILON */;
FUNCTION6 ::= WITH RETURNS NULL ON NULL INPUT FUNCTION7
        | FUNCTION7;
FUNCTION7 ::= FUNCTION4 BEGIN FUNCTION8 FUNCTION9 END FIN_AN;
FUNCTION8 ::= SELECT1 FIN_AN
        | INSERT0
        | DELETE1
        | UPDATE0;
FUNCTION9 ::= FUNCTION8 FUNCTION9
        | /* EPSILON */;