/* The following code was generated by JFlex 1.6.1 */

package Proyecto;
import static Proyecto.Token.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>D:/Users/jpbalan/Documents/NetBeansProjects/Compiladores/Compiladores/src/Proyecto/F1_MiniSQL.flex</tt>
 */
class F1_MiniSQL {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\47\1\46\1\66\1\66\1\47\22\0\1\35\1\54\1\0"+
    "\1\65\1\0\1\53\1\56\1\45\1\61\1\62\1\52\1\44\1\53"+
    "\1\31\1\42\1\51\1\41\1\41\10\37\1\0\1\53\1\54\1\55"+
    "\1\54\1\0\1\53\1\1\1\2\1\11\1\14\1\10\1\30\1\22"+
    "\1\17\1\12\1\33\1\23\1\5\1\27\1\13\1\4\1\24\1\34"+
    "\1\15\1\3\1\7\1\6\1\21\1\25\1\32\1\16\1\20\1\57"+
    "\1\0\1\60\1\0\1\26\1\0\4\36\1\43\25\36\1\63\1\50"+
    "\1\64\7\0\1\66\33\0\1\0\6\0\1\0\13\0\1\0\12\0"+
    "\1\0\21\0\1\40\37\0\1\40\u1f36\0\1\66\1\66\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\27\2\1\3\2\2\1\4\1\5\1\6"+
    "\1\3\2\1\2\3\1\1\4\3\1\2\1\7\2\2"+
    "\1\7\31\2\2\7\2\2\1\7\11\2\1\7\17\2"+
    "\2\7\3\2\1\7\25\2\1\7\34\2\1\0\1\2"+
    "\1\10\1\0\1\11\1\0\2\2\1\7\7\2\1\7"+
    "\6\2\1\7\10\2\1\7\4\2\1\7\7\2\1\7"+
    "\20\2\1\7\25\2\1\7\24\2\1\7\50\2\1\7"+
    "\1\2\1\7\6\2\2\0\1\12\1\0\27\2\2\7"+
    "\11\2\1\7\1\2\1\7\3\2\1\0\26\2\1\7"+
    "\16\2\1\7\3\2\1\7\13\2\1\7\15\2\1\7"+
    "\5\2\1\7\1\2\1\7\4\2\1\0\1\10\1\0"+
    "\25\2\1\7\6\2\1\0\16\2\1\7\35\2\1\7"+
    "\12\2\1\10\20\2\1\0\1\7\34\2\1\7\10\2"+
    "\1\0\1\7\4\2\1\7\10\2\1\0\10\2\1\7"+
    "\1\2\1\7\3\2\1\7\2\2\1\0\11\2\1\0"+
    "\10\2\1\0\7\2\1\0\2\2\1\7\21\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\67\0\156\0\245\0\334\0\u0113\0\u014a\0\u0181"+
    "\0\u01b8\0\u01ef\0\u0226\0\u025d\0\u0294\0\u02cb\0\u0302\0\u0339"+
    "\0\u0370\0\u03a7\0\u03de\0\u0415\0\u044c\0\u0483\0\u04ba\0\u04f1"+
    "\0\u0528\0\u055f\0\u0596\0\u05cd\0\67\0\u0604\0\u0604\0\67"+
    "\0\u063b\0\u0672\0\u06a9\0\u06e0\0\u0717\0\u074e\0\u0785\0\u07bc"+
    "\0\u07f3\0\u082a\0\u0861\0\u0898\0\u08cf\0\u0596\0\u0906\0\u093d"+
    "\0\u0974\0\u09ab\0\u09e2\0\u0a19\0\u0a50\0\u0a87\0\u0abe\0\u0af5"+
    "\0\u0b2c\0\u0b63\0\u0b9a\0\u0bd1\0\u0c08\0\u0c3f\0\u0c76\0\u0cad"+
    "\0\u0ce4\0\u0d1b\0\u0d52\0\u0d89\0\u0dc0\0\u0df7\0\u0e2e\0\u0e65"+
    "\0\u0e9c\0\u0ed3\0\u0f0a\0\u0f41\0\u0f78\0\u0faf\0\u0fe6\0\u101d"+
    "\0\u1054\0\u108b\0\u10c2\0\u10f9\0\u1130\0\u1167\0\u119e\0\u11d5"+
    "\0\u120c\0\u1243\0\u127a\0\u12b1\0\u12e8\0\u131f\0\u1356\0\u138d"+
    "\0\u13c4\0\u13fb\0\u1432\0\u1469\0\u14a0\0\u14d7\0\u150e\0\u1545"+
    "\0\u157c\0\u15b3\0\u15ea\0\u1621\0\u1658\0\u168f\0\u16c6\0\u16fd"+
    "\0\u1734\0\u176b\0\u17a2\0\u17d9\0\u1810\0\u1847\0\u187e\0\u18b5"+
    "\0\u18ec\0\u1923\0\u195a\0\u1991\0\u19c8\0\u19ff\0\u1a36\0\u1a6d"+
    "\0\u1aa4\0\u1adb\0\u1b12\0\u1b49\0\u1b80\0\u1bb7\0\u1bee\0\u1c25"+
    "\0\u1c5c\0\u1c93\0\u1cca\0\u1d01\0\u1d38\0\u1d6f\0\u1da6\0\u1ddd"+
    "\0\u1e14\0\u1e4b\0\u1e82\0\u1eb9\0\u1ef0\0\u1f27\0\u1f5e\0\u1f95"+
    "\0\u1fcc\0\u2003\0\u203a\0\u2071\0\u20a8\0\u20df\0\u2116\0\u214d"+
    "\0\u063b\0\67\0\u2184\0\u21bb\0\u21f2\0\u2229\0\u2260\0\u2297"+
    "\0\u22ce\0\u2305\0\u233c\0\u2373\0\u23aa\0\u23e1\0\u2418\0\u244f"+
    "\0\u2486\0\u24bd\0\u24f4\0\u252b\0\u2562\0\u2599\0\u25d0\0\u2607"+
    "\0\u263e\0\u2675\0\u26ac\0\u26e3\0\u271a\0\u2751\0\u2788\0\u27bf"+
    "\0\u27f6\0\u282d\0\u2864\0\u289b\0\u28d2\0\u2909\0\u2940\0\u2977"+
    "\0\u29ae\0\u29e5\0\u2a1c\0\u2a53\0\u2a8a\0\u2ac1\0\u2af8\0\u2b2f"+
    "\0\u2b66\0\u2b9d\0\u2bd4\0\u2c0b\0\u2c42\0\u2c79\0\u2cb0\0\u2ce7"+
    "\0\u2d1e\0\u2d55\0\u2d8c\0\u2dc3\0\u2dfa\0\u2e31\0\u2e68\0\u2e9f"+
    "\0\u2ed6\0\u2f0d\0\u2f44\0\u2f7b\0\u2fb2\0\u2fe9\0\u3020\0\u3057"+
    "\0\u308e\0\u30c5\0\u30fc\0\u3133\0\u316a\0\u31a1\0\u31d8\0\u320f"+
    "\0\u3246\0\u327d\0\u32b4\0\u32eb\0\u3322\0\u3359\0\u3390\0\u33c7"+
    "\0\u33fe\0\u3435\0\u346c\0\u34a3\0\u34da\0\u3511\0\u3548\0\u357f"+
    "\0\u35b6\0\u35ed\0\u1167\0\u3624\0\u365b\0\u3692\0\u36c9\0\u3700"+
    "\0\u3737\0\u376e\0\u37a5\0\u37dc\0\u3813\0\u384a\0\u3881\0\u38b8"+
    "\0\u38ef\0\u3926\0\u395d\0\u3994\0\u39cb\0\u3a02\0\u2a1c\0\u3a39"+
    "\0\u3a70\0\u3aa7\0\u3ade\0\u3b15\0\u3b4c\0\u3b83\0\u3bba\0\u3bf1"+
    "\0\u3c28\0\u3c5f\0\u3c96\0\u3ccd\0\u3d04\0\u3d3b\0\u3d72\0\u3da9"+
    "\0\u3de0\0\u3e17\0\u3e4e\0\u3e85\0\u3ebc\0\u3ef3\0\u3f2a\0\u3f61"+
    "\0\u3f98\0\u3fcf\0\u4006\0\u403d\0\u4074\0\u40ab\0\u40e2\0\u4119"+
    "\0\u4150\0\u4187\0\u41be\0\u41be\0\u41f5\0\u422c\0\u4263\0\u429a"+
    "\0\u42d1\0\u4308\0\u433f\0\u4376\0\u43ad\0\u43e4\0\u441b\0\u4452"+
    "\0\u4489\0\u44c0\0\u44f7\0\u452e\0\u4565\0\u459c\0\u45d3\0\u460a"+
    "\0\u4641\0\u4678\0\u46af\0\u46e6\0\u471d\0\u4754\0\u478b\0\u47c2"+
    "\0\u47f9\0\u4830\0\u4867\0\u489e\0\u48d5\0\u490c\0\u4943\0\u497a"+
    "\0\u49b1\0\u49e8\0\u4a1f\0\u4a56\0\u4a8d\0\u4ac4\0\u4afb\0\u4b32"+
    "\0\u4b69\0\u4ba0\0\u4bd7\0\u4c0e\0\u4c45\0\u4c7c\0\u4cb3\0\u4cea"+
    "\0\u4d21\0\u4d58\0\u4d8f\0\u4dc6\0\u3f61\0\u4dfd\0\u4e34\0\u4e6b"+
    "\0\u4ea2\0\u4ed9\0\u4f10\0\u4f47\0\u4f7e\0\u4fb5\0\u4fec\0\u5023"+
    "\0\u505a\0\u5091\0\u50c8\0\u50ff\0\u5136\0\u516d\0\u51a4\0\u51db"+
    "\0\u5212\0\u5249\0\u5280\0\u52b7\0\u52ee\0\u5325\0\u535c\0\u5393"+
    "\0\u53ca\0\u5401\0\u5438\0\u546f\0\u54a6\0\u54dd\0\u5514\0\u554b"+
    "\0\u5582\0\u55b9\0\u55f0\0\u5627\0\u565e\0\u5695\0\u56cc\0\u5703"+
    "\0\u573a\0\u5771\0\u57a8\0\u57df\0\u5816\0\u584d\0\u5884\0\u58bb"+
    "\0\u58f2\0\u5929\0\u5960\0\u5997\0\u59ce\0\u5a05\0\u5a3c\0\u5a73"+
    "\0\u5aaa\0\u5ae1\0\u5b18\0\u5b4f\0\u5b86\0\u5bbd\0\u5bf4\0\u5c2b"+
    "\0\u5c62\0\u5c99\0\u5cd0\0\u5d07\0\u5d3e\0\u5d75\0\u5dac\0\u5de3"+
    "\0\u5e1a\0\u5e51\0\u5e88\0\u5ebf\0\u5ef6\0\u23e1\0\u5f2d\0\u5f64"+
    "\0\u5f9b\0\u5fd2\0\u6009\0\u6040\0\u6077\0\u60ae\0\u60e5\0\u611c"+
    "\0\u6153\0\u618a\0\u61c1\0\u61f8\0\u622f\0\u6266\0\u629d\0\u62d4"+
    "\0\u630b\0\u6342\0\u6379\0\u63b0\0\u63e7\0\u641e\0\u6455\0\u648c"+
    "\0\u64c3\0\u64fa\0\u6531\0\u6568\0\u659f\0\u65d6\0\u660d\0\u6644"+
    "\0\u667b\0\u66b2\0\u66e9\0\u6720\0\u6757\0\u678e\0\u2229\0\u67c5"+
    "\0\u67fc\0\u6833\0\u686a\0\u68a1\0\u68d8\0\u690f\0\u6946\0\u697d"+
    "\0\u69b4\0\u69eb\0\u6a22\0\u6a59\0\u6a90\0\u6ac7\0\u6afe\0\u6b35"+
    "\0\u6b6c\0\u4ed9\0\u6ba3\0\u6bda\0\u6c11\0\u6c48\0\u6c7f\0\u6cb6"+
    "\0\u6ced\0\u6d24\0\u6d5b\0\u6d92\0\u6dc9\0\u6e00\0\u6e37\0\u6e6e"+
    "\0\u6ea5\0\u6edc\0\u6f13\0\u6f4a\0\u6f81\0\u6fb8\0\u6fef\0\u7026"+
    "\0\u705d\0\u7094\0\u70cb\0\u7102\0\u7139\0\u7170\0\u22ce\0\u71a7"+
    "\0\u71de\0\u7215\0\u724c\0\u7283\0\u72ba\0\u72f1\0\u7328\0\u735f"+
    "\0\u7396\0\u73cd\0\u7404\0\u743b\0\u7472\0\u74a9\0\u74e0\0\u7517"+
    "\0\u754e\0\u7585\0\u75bc\0\u75f3\0\u762a\0\u7661\0\u7698\0\u76cf"+
    "\0\u7706\0\u773d\0\u7774\0\u6f4a\0\u77ab\0\u77e2\0\u2562\0\u7819"+
    "\0\u7850\0\u7887\0\u78be\0\u78f5\0\u792c\0\u28d2\0\u7963\0\u799a"+
    "\0\u79d1\0\u7a08\0\u7a3f\0\u7a76\0\u0e65\0\u7aad\0\u7ae4\0\u7b1b"+
    "\0\u7b52\0\u7b89\0\u7bc0\0\u7bf7\0\u7c2e\0\u7c65\0\u7c9c\0\u7cd3"+
    "\0\u7d0a\0\u7d41\0\u7d78\0\u7daf\0\67\0\u7de6\0\u7e1d\0\u7e54"+
    "\0\u7e8b\0\u7ec2\0\u7ef9\0\u7f30\0\u7f67\0\u7f9e\0\u7fd5\0\u800c"+
    "\0\u8043\0\u807a\0\u80b1\0\u80e8\0\u811f\0\u8156\0\u818d\0\u81c4"+
    "\0\u81fb\0\u8232\0\u8269\0\u82a0\0\u82d7\0\u830e\0\u8345\0\u837c"+
    "\0\u83b3\0\u83ea\0\u8421\0\u8458\0\u848f\0\u84c6\0\u84fd\0\u8534"+
    "\0\u856b\0\u85a2\0\u85d9\0\u8610\0\u8647\0\u867e\0\u86b5\0\u86ec"+
    "\0\u8723\0\u875a\0\u8791\0\u87c8\0\u87ff\0\u7e1d\0\u8836\0\u886d"+
    "\0\u88a4\0\u88db\0\u8912\0\u8949\0\u8980";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\2\1\30"+
    "\1\31\1\32\1\33\1\34\1\33\1\35\1\33\1\36"+
    "\1\2\1\37\1\40\1\33\1\40\1\41\2\35\1\42"+
    "\1\43\2\40\2\44\1\45\1\46\1\40\1\47\1\40"+
    "\1\50\1\40\1\51\71\0\1\33\1\52\1\53\1\33"+
    "\1\54\1\55\1\56\1\33\1\57\1\33\1\60\1\61"+
    "\1\62\3\33\1\63\7\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\64\2\33\1\65\1\33\1\66"+
    "\1\33\1\67\1\33\1\70\2\33\1\71\1\56\12\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\72"+
    "\2\33\1\73\1\33\1\74\1\75\1\76\1\77\1\100"+
    "\3\33\1\101\1\102\4\33\1\103\2\33\1\104\1\33"+
    "\1\0\2\33\1\105\1\0\4\33\1\0\1\33\24\0"+
    "\5\33\1\106\2\33\1\107\1\33\1\110\1\33\1\111"+
    "\3\33\1\112\2\33\1\113\3\33\1\114\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\115\2\33\1\116"+
    "\3\33\1\117\1\33\1\120\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\121\7\33\1\122"+
    "\10\33\1\123\4\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\124\1\33\1\125\1\126\3\33\1\127"+
    "\1\33\1\130\2\33\1\131\1\33\1\132\11\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\2\33\1\133"+
    "\1\33\1\134\5\33\1\135\1\33\1\136\13\33\1\0"+
    "\1\137\2\33\1\0\4\33\1\0\1\33\24\0\1\140"+
    "\2\33\1\141\1\142\1\143\6\33\1\144\1\33\1\145"+
    "\11\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\146\7\33\1\147\1\150\12\33\1\151\1\56"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\152"+
    "\2\33\1\153\1\33\1\154\1\33\1\155\1\156\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\157"+
    "\1\160\1\33\1\161\1\33\1\162\1\33\1\163\1\33"+
    "\1\164\2\33\1\165\13\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\166\2\33\1\167\1\33\1\170"+
    "\1\33\1\171\1\33\1\172\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\173\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\174\2\33"+
    "\1\175\24\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\176\24\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\177\10\33\1\200\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\3\33\1\201"+
    "\1\202\2\33\1\203\4\33\1\204\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\7\33\1\205\1\33"+
    "\1\206\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\207\2\33\1\210\1\211\1\212\1\33\1\213"+
    "\1\33\1\214\2\33\1\215\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\216\2\33\1\217\5\33"+
    "\1\220\2\33\1\221\1\33\1\222\11\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\223\2\33\1\224"+
    "\3\33\1\225\1\33\1\226\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\227\2\33\1\230\1\231"+
    "\1\232\1\33\1\233\1\33\1\234\2\33\1\235\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\54\0\1\236"+
    "\36\0\30\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\237\24\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\62\0\1\36\1\0\1\36\1\240\24\0"+
    "\45\241\1\242\1\0\20\241\50\0\1\40\70\0\1\243"+
    "\71\0\1\40\67\0\1\40\70\0\1\40\70\0\1\40"+
    "\70\0\1\40\67\0\1\40\2\0\2\33\1\244\25\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\2\33"+
    "\1\245\5\33\1\56\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\246\1\33\1\247\21\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\250\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\251\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\13\33\1\56\1\33\1\56\12\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\56"+
    "\12\33\1\56\14\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\56\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\21\33\1\56\6\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\252"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\253\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\254\23\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\6\33\1\255\12\33\1\237"+
    "\6\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\256\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\257\3\33\1\260\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\20\33\1\62"+
    "\7\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\26\33\1\62\1\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\33\1\261\24\33\1\56\1\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\262\27\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\2\33"+
    "\1\263\1\33\1\264\1\33\1\265\1\33\1\266\15\33"+
    "\1\267\1\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\14\33\1\270\1\33\1\271\11\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\17\33\1\62\10\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\2\33"+
    "\1\272\25\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\5\33\1\273\22\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\274\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\275\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\4\33\1\276\23\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\277\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\300\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\205\23\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\13\33\1\247\14\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\301\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\251\1\302\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\27\33\1\303\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\203\7\33"+
    "\1\304\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\305\7\33\1\306\13\33\1\247\3\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\307\17\33"+
    "\1\310\6\33\1\203\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\12\33\1\311\7\33\1\62\5\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\312\6\33"+
    "\1\313\1\33\1\314\16\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\11\33\1\315\10\33\1\316\1\317"+
    "\4\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\13\33\1\320\7\33\1\247\4\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\33\1\321\26\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\7\33\1\322"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\23\33\1\56\4\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\26\33\1\323\1\33\1\0\1\324\2\33"+
    "\1\0\4\33\1\0\1\33\24\0\26\33\1\325\1\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\326"+
    "\4\33\1\327\3\33\1\330\3\33\1\331\12\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\7\33\1\332"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\10\33\1\333\17\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\62\25\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\13\33\1\334\14\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\335"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\336\1\337\1\340\1\341\16\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\342\3\33"+
    "\1\343\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\344\3\33\1\345\1\346\4\33\1\347\1\33"+
    "\1\350\11\33\1\351\1\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\134\1\33\1\352\22\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\14\33"+
    "\1\353\13\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\354\3\33\1\355\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\356\6\33\1\357"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\3\33\1\360\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\361\3\33\1\362\1\33\1\363"+
    "\1\364\1\247\1\365\7\33\1\366\4\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\7\33\1\367\20\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\26\33"+
    "\1\370\1\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\371\17\33\1\372\1\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\6\33\1\56\1\33"+
    "\1\373\1\33\1\374\15\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\375\21\33\1\376\1\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\30\33"+
    "\1\0\1\203\2\33\1\0\4\33\1\0\1\33\24\0"+
    "\16\33\1\173\11\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\377\6\33\1\56\12\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\u0100"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\5\33\1\u0101\20\33\1\u0102\1\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\26\33\1\u0103\1\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\u0104\1\33"+
    "\1\u0105\1\33\1\u0106\3\33\1\u0107\1\33\1\205\14\33"+
    "\1\u0108\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u0109\1\33\1\u010a\25\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\u0103\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\11\33\1\u010b\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\4\33"+
    "\1\u010c\17\33\1\u010d\3\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\62\23\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u010e\1\33\1\u010f"+
    "\1\33\1\u0110\1\33\1\u0111\1\33\1\u0112\7\33\1\u0113"+
    "\2\33\1\u0114\3\33\1\u0115\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\21\33\1\u0116\6\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u0117\27\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\20\33\1\u0118"+
    "\7\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\4\33\1\u0119\1\u0117\22\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\12\33\1\62\15\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\4\33\1\u011a\7\33"+
    "\1\u011b\13\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\u011c\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u011d\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\3\33\1\u011e\24\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\56\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\346\2\33\1\u011f\24\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\15\33\1\56\12\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\4\33\1\u0120"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u0121\10\33\1\56\1\u0122\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\u0123\25\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\332"+
    "\27\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\33\1\u0124\26\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u0125\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\20\33\1\u0126\7\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\3\33\1\u0127"+
    "\3\33\1\u0128\1\33\1\u0129\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u012a\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\254"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\u012b\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u012c\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u012d\1\33\1\170"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\u012e\21\33\1\0\1\56\2\33\1\0\4\33"+
    "\1\0\1\33\24\0\12\33\1\65\1\u012f\14\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\312"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\12\33\1\u0130\15\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\134\23\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\5\33\1\u0131\6\33\1\u0132"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\3\33\1\u0133\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\u0120\5\33\1\u0134\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u012e"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\4\33\1\u0135\7\33\1\u0136\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\3\33\1\u0137\3\33\1\u0138"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\23\0"+
    "\67\u0139\1\0\11\33\1\332\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\33\0\1\u013a\26\0\1\240\1\0"+
    "\1\240\1\0\1\u013a\23\0\46\u013b\1\u013c\20\u013b\1\0"+
    "\3\33\1\u013d\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u013e\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\3\33\1\u013f\24\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\7\33\1\u0117"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\16\33\1\u0140\11\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u0141\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\22\33\1\u011f\5\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\16\33\1\56"+
    "\11\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\22\33\1\56\5\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\24\33\1\u0142\3\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\25\33\1\u0143\2\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\24\33\1\134"+
    "\3\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\254\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\2\33\1\u0144\25\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u0145\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\u0146\25\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u0147\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\5\33\1\u0148\22\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\u0131\1\33\1\u0149\1\251"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u014a\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\206\24\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\u014b\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\6\33\1\u014c\21\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u014d\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\10\33\1\62\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\u014e\23\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\u014f\4\33"+
    "\1\u0150\1\u0151\13\33\1\u0152\3\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u0117\13\33\1\366"+
    "\4\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u0153\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u0154\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u0155\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\2\33\1\u0156"+
    "\25\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\21\33\1\u0157\6\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\13\33\1\56\14\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\u0120\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\13\33\1\u0118\14\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u0120\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\u0158\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\21\33\1\62\6\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\14\33\1\56\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\63\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\332\24\33\1\0\2\33\1\u0159\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u015a\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\214"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u012c\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u015b\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\30\33\1\0\2\33\1\u015c\1\0"+
    "\4\33\1\0\1\33\24\0\23\33\1\u015d\4\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u015e"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u015f\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u0160\1\u0161\15\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\7\33\1\56\2\33"+
    "\1\u013f\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\21\33\1\u0162\4\33\1\56\1\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\25\33\1\u0163\2\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\56\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\u0164\27\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\30\33\1\u0165\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\u0166\23\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u0167\4\33\1\u0168"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\10\33\1\u0130\17\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0169\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\u016a\3\33\1\56"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\2\56\1\u016b\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\u016c\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\4\33\1\u016d\23\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\4\33\1\u016e"+
    "\1\u016f\22\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\12\33\1\203\15\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\2\33\1\u0170\3\33\1\u0171\3\33"+
    "\1\u0172\5\33\1\u0173\7\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\u0174\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\23\33\1\u0175\2\33"+
    "\1\u0176\1\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\2\33\1\u0177\25\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\2\33\1\u0178\11\33\1\u0179\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\2\33"+
    "\1\u017a\25\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\u017b\27\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u017c\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\10\33\1\u017d\17\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\4\33\1\u017e"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u017f\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\56\3\33\1\u0180\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\4\33\1\u0181"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\u0182\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0183\1\33\1\u0184\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\5\33\1\203"+
    "\22\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\12\33\1\u0185\15\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0186\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\5\33\1\u0187\3\33\1\u0188"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u017a\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\16\33\1\u0189\11\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\56\1\u018a\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\4\33"+
    "\1\u018b\23\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\u018c\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\u018d\6\33\1\56\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\56"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\33\1\170\26\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\237\27\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\4\33\1\u018e\23\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\u018f\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u017b\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u0190\4\33\1\u0191\16\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u0192\6\33\1\u0193"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\21\33\1\u0194\6\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\u0195\1\33\1\u0196\11\33\1\56"+
    "\5\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u0197\25\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\u0198\23\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\56\5\33\1\u0199"+
    "\10\33\1\u019a\6\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\56\6\33\1\u019b\14\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u019c"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u019d\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\5\33\1\u019e\22\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\u019f\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\3\33\1\u01a0\3\33"+
    "\1\u01a1\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u01a2\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\u01a3\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\16\33\1\203\11\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\11\33"+
    "\1\314\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\13\33\1\u01a4\14\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\5\33\1\u01a5\22\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\156\4\33"+
    "\1\u0118\12\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\24\33\1\56\3\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\56\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\33\1\306\26\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\5\33"+
    "\1\u0103\22\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\56\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\10\33\1\306\17\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\6\33\1\u01a6\21\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\11\33"+
    "\1\57\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u01a7\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\10\33\1\u01a8\17\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\3\33\1\203\24\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\10\33"+
    "\1\u01a9\17\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\2\33\1\u01aa\5\33\1\u01ab\12\33\1\u0190\4\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\3\33"+
    "\1\u0117\6\33\1\203\5\33\1\u01ac\5\33\1\u01ad\1\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u01ae\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\16\33\1\u01af\11\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u01b0\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\12\33\1\u01b1\1\33"+
    "\1\62\13\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\10\33\1\253\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\5\33\1\170\22\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\5\33\1\u017b\22\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\305\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u01b2\1\u01b3\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\203\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\57\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\4\33"+
    "\1\u01b4\2\33\1\56\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\2\33\1\203\25\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\26\33\1\56\1\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u01b5\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\23\0\46\u0139\1\35\20\u0139\31\0\1\u01b6\5\0\1\u01b7"+
    "\1\0\1\u01b7\2\0\1\u01b6\3\0\1\u01b6\16\0\52\u013c"+
    "\1\u01b8\14\u013c\1\0\4\33\1\u0175\23\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\14\33\1\57\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\10\33"+
    "\1\355\17\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\u01b9\24\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\332\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\7\33\1\132\20\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\4\33"+
    "\1\u01ba\23\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u01bb\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\11\33\1\u01bc\16\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\11\33\1\u01bd\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\10\33"+
    "\1\203\17\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\2\33\1\247\25\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\u01be\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\12\33\1\u01bf\15\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\26\33"+
    "\1\u01c0\1\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\u01c1\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\13\33\1\u015a\14\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\4\33\1\u01c2\23\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\355\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\14\33\1\u01c3\13\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\56\2\33\1\u01c4\24\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\u01c5\27\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u01c6\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u01c7\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\13\33\1\u01c8\1\u01c9\13\33\1\0"+
    "\1\u01ca\1\33\1\u01cb\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u016a\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\5\33\1\u01cc\22\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u011d\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\5\33\1\62"+
    "\22\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\3\33\1\u01cd\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u01ce\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\5\33\1\306\22\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\3\33\1\u01cf"+
    "\24\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u01d0\25\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\u01d1\14\33\1\u01d2\10\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\4\33\1\u0118"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u01d3\25\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\21\33\1\247\6\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\10\33\1\u01d4\17\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\23\33\1\62"+
    "\4\33\1\0\3\33\1\0\4\33\1\0\1\33\33\0"+
    "\1\u01d5\57\0\20\33\1\u0120\7\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\14\33\1\u01d6\13\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\u0147\27\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\23\33"+
    "\1\u01d7\4\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u017a\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\u01d8\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\4\33\1\u01d9\23\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\7\33\1\u01da"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u01db\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\26\33\1\332\1\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u01dc\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u01dd\10\33\1\u01de"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u01df\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u01a1\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u01e0\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\203"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\u01e1\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\u0117\24\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u01e2\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\2\33\1\56"+
    "\25\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\6\33\1\62\21\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\u01e3\24\33\1\u0143\2\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\22\33\1\u01e4\5\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\57"+
    "\27\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\12\33\1\u01e5\1\33\1\203\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\14\33\1\u01e6\4\33\1\247"+
    "\6\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\5\33\1\u01c4\22\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u01e7\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\30\33\1\0\1\56\2\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\u01e8\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u01e9\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\13\33\1\u01ea\14\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\306\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\3\33\1\u01d6\24\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u01eb\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u01ec\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\11\33\1\u01ed\16\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\14\33\1\u01a7\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\33"+
    "\1\u01ee\26\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\4\33\1\u01ef\23\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\u01f0\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u01f1\27\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\26\33\1\306"+
    "\1\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\5\33\1\u01f2\22\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u01f3\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u01f4\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\u01f5"+
    "\2\33\1\u01f6\13\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\u01f7\24\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u0150\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\33\1\u01f8"+
    "\26\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\3\33\1\u01f9\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\5\33\1\u01fa\22\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\6\33\1\u01fb\21\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\3\33\1\u01f1"+
    "\10\33\1\u01fc\13\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\u01fd\21\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\14\33\1\332\13\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\12\33\1\u01fe"+
    "\15\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\22\33\1\62\5\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\203\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u01ff\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\u0200"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\4\33\1\u0201\23\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0202\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\306\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\u0100"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\346\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0203\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\7\33\1\u0204\20\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\u0205"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\11\33\1\u0206\16\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\u0207\27\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\27\33\1\u0178\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u0208\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\7\33\1\u019b"+
    "\20\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u0209\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\211\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u020a\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\27\33\1\u020b"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u020c\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\62\0\1\u01b7\1\0\1\u01b7\64\0\1\u01b7\1\0\1\u01b7"+
    "\1\u020d\24\0\51\u013c\1\35\1\u01b8\14\u013c\1\0\14\33"+
    "\1\u020e\13\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\u020f\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\u0118\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\2\33\1\u0210\25\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\3\33"+
    "\1\u0211\24\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\11\33\1\u0212\16\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u0213\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\56\27\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\26\33\1\u0214"+
    "\1\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\11\33\1\346\16\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u0178\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\13\33\1\62\14\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\u0215"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u0216\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\u0217\27\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\u0218\24\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\26\33\1\u0120\1\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\5\33\1\u0219"+
    "\22\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\312\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\24\33\1\332\3\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\2\33\1\u021a\25\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\14\33\1\u01ad\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\11\33"+
    "\1\100\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u021b\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\u021c\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u0134\3\33\1\u016e"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\3\33\1\u021d\24\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\55\0\1\u021e\35\0\12\33\1\306\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u021f"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\13\33\1\u0220\14\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\3\33\1\63\24\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\274\25\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u0221"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\14\33\1\u0222\13\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u0223\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u0159\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\u01d7"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u0224\25\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0225\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u0226\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\u0227"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\23\33\1\u0228\4\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\u0229\25\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\264\15\33\1\306"+
    "\7\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\u022a\27\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\u022b\27\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u022c\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\355\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\10\33\1\254"+
    "\17\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\5\33\1\352\22\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\27\33\1\56\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\134\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u022d\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\62"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\4\33\1\203\23\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\u022e\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\3\33\1\u01bc\24\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\12\33\1\u0147"+
    "\15\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\11\33\1\u022f\16\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\12\33\1\u0230\15\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\u01eb\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\5\33\1\346\22\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\11\33"+
    "\1\u0231\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\7\33\1\155\20\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\11\33\1\u0147\16\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\11\33\1\72\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\27\33"+
    "\1\u0232\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\10\33\1\u017e\17\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\u0233\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\3\33\1\u01eb\24\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\13\33\1\u0234"+
    "\14\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\14\33\1\72\13\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\251\25\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\4\33\1\u0235\23\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\14\33\1\205"+
    "\13\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\12\33\1\u0236\15\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\20\33\1\247\7\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\21\33\1\332\6\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\u0237\27\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u0238\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\62\0\1\u020d\1\0\1\u020d\26\0\11\33\1\u0239\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\u023a\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u023b\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\12\33\1\u023c\15\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\6\33\1\u023d\21\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\11\33"+
    "\1\u023e\16\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\25\33\1\u023f\2\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\12\33\1\u0118\15\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\23\33\1\u017a\4\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\6\33"+
    "\1\u0240\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\24\33\1\u0241\3\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\u0207\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u0242\27\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\1\162\27\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\u0243\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\12\33\1\u0244\15\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\33\0\1\u0245\57\0\7\33\1\u0246\20\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\56\1\33\1\u0141\16\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\u0247\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\u0248\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\23\33\1\u0249"+
    "\4\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\14\33\1\u024a\13\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\u024b\21\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\6\33\1\u024c\21\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\3\33\1\u01c2"+
    "\24\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\11\33\1\u019d\16\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\4\33\1\u024d\23\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\6\33\1\u0178\21\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u024e"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\1\33\1\62\21\33\1\u022b\4\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\u0101\6\33\1\305\20\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\1\33"+
    "\1\u024f\26\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\12\33\1\264\15\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\13\33\1\u0250\14\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\11\33\1\u0251\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\12\33"+
    "\1\u0252\15\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\5\33\1\u01f1\22\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\u0253\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\30\33\1\0\3\33"+
    "\1\u0254\4\33\1\0\1\33\24\0\10\33\1\u022b\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\30\33"+
    "\1\0\1\u0255\2\33\1\0\4\33\1\0\1\33\24\0"+
    "\17\33\1\u017e\10\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\21\33\1\65\6\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\11\33\1\u0256\16\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\15\33\1\u0257"+
    "\12\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\10\33\1\u0258\17\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\1\u0259\27\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\2\33\1\u025a\25\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\26\33\1\u025b\1\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u025c\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\20\33\1\u0173\7\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\34\0\1\u025d\56\0\11\33\1\u025e\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\2\33"+
    "\1\u025f\25\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\3\33\1\u0260\24\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\305\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\25\33\1\u0261\2\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\7\33"+
    "\1\u0262\20\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\15\33\1\u0263\12\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\5\33\1\u0264\22\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\u0265\17\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\21\33"+
    "\1\u0234\6\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\10\33\1\372\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\21\33\1\372\6\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\45\0\1\u0266\45\0\6\33"+
    "\1\u025f\21\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\10\33\1\u017a\17\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\1\u0267\27\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\u0268\17\33\1\u0269"+
    "\5\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\2\33\1\u026a\25\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\7\33\1\203\20\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\23\33\1\170\4\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\25\33\1\u026b"+
    "\2\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\12\33\1\u026c\15\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\u026d\21\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\12\33\1\307\15\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\5\33\1\u0148"+
    "\1\u026e\4\33\1\355\14\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\14\33\1\256\13\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\10\33\1\u0265\14\33"+
    "\1\u026f\2\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\6\33\1\u024a\21\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\3\33\1\u0120\24\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\40\0\1\u0270\52\0\5\33"+
    "\1\u0271\22\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\11\33\1\u0272\16\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\7\33\1\u0273\20\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\3\33\1\u0274\24\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\16\33"+
    "\1\u0275\7\33\1\u0276\1\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\24\0\6\33\1\u0202\21\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\1\u0101\27\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\u0277"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\11\33\1\u0278\16\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\27\0\1\u0279\63\0\13\33\1\u0176\14\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\26\33\1\u027a"+
    "\1\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\15\33\1\u027b\12\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\5\33\1\u027c\22\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\3\33\1\u027d\24\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\11\33\1\u027e"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\26\33\1\u027f\1\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\12\33\1\u0280\15\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\31\0\1\u0281\61\0\11\33\1\u0282"+
    "\16\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\23\33\1\u0283\4\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\14\33\1\274\13\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\5\33\1\u0117\22\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\12\33\1\u0175"+
    "\15\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u0284\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\u0173\25\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\47\0\1\u025d\43\0\4\33\1\u0285"+
    "\23\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\16\33\1\u0286\11\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\2\33\1\u01d1\25\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\u0287\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\14\33\1\u0288\13\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\14\33"+
    "\1\u0289\13\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\1\u028a\27\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\11\33\1\u028b\16\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\2\33\1\u028c\25\33\1\0"+
    "\3\33\1\0\4\33\1\0\1\33\24\0\6\33\1\u028d"+
    "\21\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u028e\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\15\33\1\u028f\12\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\6\33\1\u026d\4\33\1\u0290"+
    "\14\33\1\0\3\33\1\0\4\33\1\0\1\33\24\0"+
    "\7\33\1\u0291\20\33\1\0\3\33\1\0\4\33\1\0"+
    "\1\33\24\0\6\33\1\u0292\21\33\1\0\3\33\1\0"+
    "\4\33\1\0\1\33\24\0\1\u0293\27\33\1\0\3\33"+
    "\1\0\4\33\1\0\1\33\24\0\11\33\1\u0294\16\33"+
    "\1\0\3\33\1\0\4\33\1\0\1\33\24\0\4\33"+
    "\1\u0295\23\33\1\0\3\33\1\0\4\33\1\0\1\33"+
    "\24\0\2\33\1\u028e\25\33\1\0\3\33\1\0\4\33"+
    "\1\0\1\33\23\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[35255];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\32\1\1\11\2\1\1\11\175\1\1\0"+
    "\2\1\1\0\1\11\1\0\225\1\2\0\1\1\1\0"+
    "\50\1\1\0\120\1\1\0\1\1\1\0\34\1\1\0"+
    "\110\1\1\0\46\1\1\0\16\1\1\0\10\1\1\11"+
    "\10\1\1\0\11\1\1\0\10\1\1\0\7\1\1\0"+
    "\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[661];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public int Lineas(java.io.Reader reader) 
    {
        return yyline;
    }
    public int Columnas(java.io.Reader reader) 
    {
        return yycolumn;
    }
    public String Texto;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  F1_MiniSQL(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 210) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { Texto = yytext(); return ERROR;
            }
          case 11: break;
          case 2: 
            { Texto = yytext(); return IDENTIFICADOR;
            }
          case 12: break;
          case 3: 
            { Texto = yytext(); return OPERADOR;
            }
          case 13: break;
          case 4: 
            { /*Ignore*/
            }
          case 14: break;
          case 5: 
            { Texto = yytext(); return ENTERO;
            }
          case 15: break;
          case 6: 
            { Texto = yytext(); return BOOLEANO;
            }
          case 16: break;
          case 7: 
            { Texto = yytext(); return PALABRA_RESERVADA;
            }
          case 17: break;
          case 8: 
            { Texto = yytext(); return DECIMAL;
            }
          case 18: break;
          case 9: 
            { Texto = yytext(); return CADENA;
            }
          case 19: break;
          case 10: 
            { Texto = yytext(); return ERROR_COMENTARIO;
            }
          case 20: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
